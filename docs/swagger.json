{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "An e-commerce site in Go using Gin framework",
        "title": "E-commerce",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "host": "localhost:1111",
    "basePath": "/",
    "paths": {
        "/admin/usermanagement/manageblock": {
            "patch": {
                "description": "Block or unblock a user by their user ID",
                "tags": [
                    "Admin"
                ],
                "summary": "Block or Unblock users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User status updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/usermanagement/viewusers": {
            "get": {
                "description": "Retrieve a list of active users",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "List Users",
                "responses": {
                    "200": {
                        "description": "List of active users",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/addaddress": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Add a new address for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Add Address",
                    "Users"
                ],
                "summary": "Add User Address",
                "parameters": [
                    {
                        "description": "User address data",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address added successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/applycoupon": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Apply a coupon code to a specific product in the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupons",
                    "Cart",
                    "Users"
                ],
                "summary": "Apply Coupon",
                "parameters": [
                    {
                        "description": "Coupon data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.uSerData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/cancelorder": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel an order by order ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Users",
                    ""
                ],
                "summary": "Cancel Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID to cancel",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancellation success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/cart/checkout": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Proceed to checkout for the items in the cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart",
                    "Users"
                ],
                "summary": "Checkout",
                "responses": {
                    "200": {
                        "description": "Checkout details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Cart is empty",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Address does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/changepassword": {
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Change user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication",
                    "Users"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Password change data",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.userEnterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/checkcoupon": {
            "post": {
                "description": "Check the validity of a coupon code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupons",
                    "Cart",
                    "Users"
                ],
                "summary": "Check Coupon Validity",
                "parameters": [
                    {
                        "description": "Coupon data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.couponData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon validity status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Coupon does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/editprofile": {
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Edit user profile details and associated address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Edit User Profile",
                "parameters": [
                    {
                        "description": "User profile data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.data"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated profile details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/filterbycategory": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a list of products filtered by category ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Users"
                ],
                "summary": "Filter Products by Category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "cid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Category doesn't exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/forgotpassword": {
            "patch": {
                "description": "User can change password if forgot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication",
                    "Users"
                ],
                "summary": "Forgot Password",
                "parameters": [
                    {
                        "description": "User input",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/controllers.userData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/invoice": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Generate a purchase invoice for a user's order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoice",
                    "Orders",
                    "Users"
                ],
                "summary": "Generate Purchase Invoice",
                "responses": {
                    "200": {
                        "description": "HTML response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/invoice/download": {
            "get": {
                "description": "Download the generated purchase invoice as a PDF",
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Invoice",
                    "Users"
                ],
                "summary": "Download Purchase Invoice",
                "responses": {
                    "200": {
                        "description": "PDF file"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Log in a user and generate an authentication token",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/payment/cashOnDelivery": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Place an order using Cash On Delivery payment method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Users"
                ],
                "summary": "Cash On Delivery",
                "responses": {
                    "200": {
                        "description": "Order details and status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Cart is empty",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/payment/showwallet": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieve the balance amount in the user's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet",
                    "Users"
                ],
                "summary": "Show Wallet Balance",
                "responses": {
                    "200": {
                        "description": "Wallet balance",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/products/details": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get details of a specific product by its name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Users"
                ],
                "summary": "Get Product Details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product name",
                        "name": "product_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/products/search": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Search for products by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Users"
                ],
                "summary": "Search Products",
                "parameters": [
                    {
                        "description": "Search query",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching product",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/products/view": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "View a list of products with pagination support",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products",
                    "Users"
                ],
                "summary": "View Products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/profile/addtocart": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Add a product to the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart",
                    "Users"
                ],
                "summary": "Add Product to Cart",
                "parameters": [
                    {
                        "description": "Product data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.productData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Out of Stock",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/profile/deletecart": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete an item from the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart",
                    "Users"
                ],
                "summary": "Delete Cart Item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart item ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Cart does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/profile/viewcart": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "View items in the user's cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart",
                    "Users"
                ],
                "summary": "View Cart",
                "responses": {
                    "200": {
                        "description": "Cart items",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Cart is empty",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/returnorder": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Request to return an order by providing order ID and product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Users"
                ],
                "summary": "Return Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID of the ordered product",
                        "name": "product_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Order ID to be returned",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order return success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/showorders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of user orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders",
                    "Users"
                ],
                "summary": "Show User Orders",
                "responses": {
                    "200": {
                        "description": "User order details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "No orders found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Signup a user with required datas",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Signup"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/viewprofile": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Retrieve user details and asscciated address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Show User Details",
                "responses": {
                    "202": {
                        "description": "User details and address",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Search": {
            "type": "object",
            "properties": {
                "search": {
                    "type": "string"
                }
            }
        },
        "controllers.UserLogin": {
            "type": "object",
            "properties": {
                "blockOrNot": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.couponData": {
            "type": "object",
            "properties": {
                "coupon": {
                    "type": "string"
                }
            }
        },
        "controllers.data": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "defaultAdd": {
                    "type": "boolean"
                },
                "district": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "houseName": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "landmark": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "phoneAddrs": {
                    "type": "integer"
                },
                "pincode": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "controllers.productData": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "controllers.uSerData": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "coupon": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "landmark": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "controllers.userData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "repeatePassword": {
                    "type": "string"
                }
            }
        },
        "controllers.userEnterData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "lastPassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Address": {
            "type": "object",
            "properties": {
                "addressId": {
                    "type": "integer"
                },
                "area": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "defaultadd": {
                    "type": "boolean"
                },
                "district": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "housename": {
                    "type": "string"
                },
                "landmark": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                },
                "pincode": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password",
                "phone"
            ],
            "properties": {
                "blockOrNot": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "id": {
                    "type": "integer"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "referal_code": {
                    "type": "string"
                },
                "user_status": {
                    "type": "boolean"
                }
            }
        }
    }
}